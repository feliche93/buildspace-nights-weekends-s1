type = "directrequest"
schemaVersion = 1
name = "twitter-user-latest-tweet-ts"
externalJobID = "2cc92622-6a6a-4975-ae49-9c873525e881"
maxTaskDuration = "0s"
contractAddress = "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
minIncomingConfirmations = 0
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log   [type=ethabidecodelog
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type=cborparse data="$(decode_log.data)"]
    fetch        [type=bridge name="twitter-adapter" requestData="{\\"id\\": $(jobSpec.externalJobID), \\"data\\": {\\"username\\": $(decode_cbor.username), \\"userid\\": $(decode_cbor.userid), \\"method\\": $(decode_cbor.method), \\"unix_ts\\": $(decode_cbor.unix_ts)}}" allowunrestrictednetworkaccess="true"]
    decode_log -> decode_cbor -> fetch
    fetch -> payload
    fetch -> userid
    payload      [type=jsonparse path="data,payload" data="$(fetch)"]
    userid      [type=jsonparse path="data,userid" data="$(fetch)"]
    payload -> encode_data
    userid -> encode_data
    encode_data  [type=ethabiencode abi="(bytes32 _requestId, uint256 _payload, uint256 _userId)" data="{\\"_requestId\\": $(decode_log.requestId), \\"_payload\\": $(payload), \\"_userId\\": $(userid) }"]
    encode_tx    [type=ethabiencode
                  abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                 ]
    submit_tx    [type=ethtx to="0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512" data="$(encode_tx)"]

    encode_data -> encode_tx -> submit_tx
"""
